@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
    Убираем внутренние отступы слева тегам списков,
    у которых есть атрибут class
   */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
    Убираем внешние отступы body и двум другим тегам,
    у которых есть атрибут class
   */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
    Убираем внешние отступы вертикали нужным тегам,
    у которых есть атрибут class
   */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
    Убираем стандартный маркер маркированному списку,
    у которого есть атрибут class
   */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
    Обнуляем вертикальные внешние отступы параграфа,
    объявляем локальную переменную для внешнего отступа вниз,
    чтобы избежать взаимодействие с более сложным селектором
   */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
    Внешний отступ вниз для параграфа без атрибута class,
    который расположен не последним среди своих соседних элементов
   */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
    Упрощаем работу с изображениями и видео
   */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
    Наследуем свойства шрифт для полей ввода
   */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
  height: 100%;
  /**
      Убираем скачок интерфейса по горизонтали
      при появлении / исчезновении скроллбара
     */
  scrollbar-gutter: stable;
}

/**
    Плавный скролл
   */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
  min-height: 100%;
  /**
      Унифицированный интерлиньяж
     */
  line-height: 1.5;
}

/**
    Нормализация высоты элемента ссылки при его инспектировании в DevTools
   */
a:where([class]) {
  display: inline-flex;
}

/**
    Курсор-рука при наведении на элемент
   */
button,
label {
  cursor: pointer;
}

/**
    Приводим к единому цвету svg-элементы
    (за исключением тех, у которых уже указан
    атрибут fill со значением 'none' или начинается с 'url')
   */
:where([fill]:not([fill=none], [fill^=url])) {
  fill: currentColor;
}

/**
    Приводим к единому цвету svg-элементы
    (за исключением тех, у которых уже указан
    атрибут stroke со значением 'none')
   */
:where([stroke]:not([stroke=none], [stroke^=url])) {
  stroke: currentColor;
}

/**
    Чиним баг задержки смены цвета при взаимодействии с svg-элементами
   */
svg * {
  transition-property: fill, stroke;
}

/**
    Приведение рамок таблиц в классический 'collapse' вид
   */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
    Удаляем все анимации и переходы для людей,
    которые предпочитают их не использовать
   */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

:root {
  --container-width: 1600px;
  --container-padding-x: 16px;
  --transition-duration: 0.2s;
}

html.is-lock {
  overflow: hidden;
}

body {
  display: flex;
  flex-direction: column;
  font-family: "Inter", sans-serif;
  font-weight: 400;
  font-size: 29px;
  letter-spacing: -0.03em;
  color: #2c3f42;
  background-color: #fff8f0;
}

main {
  flex-grow: 1;
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
}
@media (any-hover: hover) {
  a:hover {
    color: #d2600f;
  }
}
@media (any-hover: none) {
  a:active {
    color: #d2600f;
  }
}
a[class] {
  text-decoration: none;
}

@font-face {
  font-family: "Inter";
  src: url(../fonts/AnyConv.com__Inter_24pt-Regular.woff2) format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Open sans";
  src: url(../fonts/AnyConv.com__Inter_24pt-Regular.woff2) format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
.footer {
  bottom: 0;
  width: 100%;
  font-size: 20px;
  background-color: #f6f2ea;
}
.footer__extra {
  display: flex;
  justify-content: space-between;
  align-items: center;
  column-gap: 1rem;
  padding-block: 80px;
}
.footer__extra-menu-list {
  display: flex;
}
.footer__extra-menu-item:not(:last-child)::after {
  content: "|";
  margin-inline: 11px;
}

.soc1als__list {
  display: flex;
  column-gap: 44px;
}

.hero {
  position: relative;
  background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(../image/image1.png) center/cover no-repeat;
}
.hero__main {
  width: 100%;
  height: 100vh;
  display: flex;
  justify-content: center;
  flex-direction: column;
  text-align: center;
  align-items: center;
  color: #fff;
  row-gap: 40px;
}
.hero__main-title {
  font-size: 75px;
}
.hero__main-btn {
  padding: 32px 77px;
  border-radius: 10px;
  background-color: #fff8f0;
  border: none;
}
@media (any-hover: hover) {
  .hero__main-btn:hover {
    color: #fff;
    background-color: #e4caab;
  }
}
@media (any-hover: none) {
  .hero__main-btn:active {
    color: #fff;
    background-color: #e4caab;
  }
}

.section-example {
  padding-top: 200px;
  display: grid;
  row-gap: 80px;
  margin-bottom: 280px;
}
.section-example__header {
  text-align: center;
  font-size: 50px;
}
.section-example__content {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 200px;
}
.section-example__content-title {
  margin-bottom: 15px;
}
.section-example__content-item {
  font-weight: 300;
}

.section-answers {
  display: grid;
  grid-template-columns: 1fr 1fr;
  margin-bottom: 250px;
}
.section-answers__header-title {
  font-size: 70px;
  margin-bottom: 20px;
}
.section-answers__list {
  display: flex;
  flex-direction: column;
  row-gap: 100px;
}
.section-answers__item {
  display: flex;
  align-items: start;
  gap: 15px;
}
.section-answers__item-num {
  font-size: 40px;
  background-color: #fce2cf;
  font-weight: bold;
  padding: 10px 15px;
  border-radius: 20px;
}

.section-users {
  margin-bottom: 100px;
}
.section-users__content {
  display: flex;
  flex-direction: column;
  row-gap: 20px;
}
.section-users__list {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 30px;
}
.section-users__item {
  display: flex;
  flex-direction: column;
  row-gap: 20px;
}

.test__header {
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  row-gap: 40px;
}
.test__header-title {
  font-size: 65px;
}
.test__header-btn {
  padding: 32px 77px;
  border-radius: 10px;
  color: #2c3f42;
  background-color: #fce2cf;
  border: none;
}
@media (any-hover: hover) {
  .test__header-btn:hover {
    color: #fff;
    background-color: #b69c8a;
  }
}
@media (any-hover: none) {
  .test__header-btn:active {
    color: #fff;
    background-color: #b69c8a;
  }
}
.test__header-options {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  column-gap: 50px;
}
.test__header-options button {
  padding: 32px 77px;
  border-radius: 10px;
  color: #2c3f42;
  background-color: #fce2cf;
  border: none;
}
@media (any-hover: hover) {
  .test__header-options button:hover {
    color: #fff;
    background-color: #b69c8a;
  }
}
@media (any-hover: none) {
  .test__header-options button:active {
    color: #fff;
    background-color: #b69c8a;
  }
}

.hidden {
  display: none;
}

/*# sourceMappingURL=main.css.map */
